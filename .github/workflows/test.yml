name: Todo App Test Pipeline
on: [push, pull_request]

jobs:
  TodoAppPipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # Cache node_modules for faster installs
      - name: Cache backend node_modules
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-node-${{ hashFiles('backend/package-lock.json') }}

      - name: Cache frontend node_modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-node-${{ hashFiles('frontend/package-lock.json') }}

      # Install dependencies
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      # Configure Playwright (let it handle the frontend server)
      - name: Configure Playwright
        working-directory: ./frontend
        run: |
          echo "import { defineConfig, devices } from '@playwright/test';

          export default defineConfig({
            testDir: './tests',
            fullyParallel: true,
            forbidOnly: !!process.env.CI,
            retries: process.env.CI ? 2 : 0,
            workers: process.env.CI ? 1 : undefined,
            reporter: 'html',
            use: {
              baseURL: 'http://localhost:3000',
              trace: 'on-first-retry',
            },
            projects: [
              {
                name: 'chromium',
                use: { ...devices['Desktop Chrome'] },
              },
            ],
            webServer: {
              command: 'npm start',
              url: 'http://localhost:3000',
              reuseExistingServer: false,
              timeout: 120 * 1000
            }
          });" > playwright.config.ts

      # Start backend server in background for API tests and UI tests
      - name: Start backend server
        working-directory: ./backend
        run: |
          nohup npm start > backend.log 2>&1 &
          echo $! > backend.pid
        env:
          NODE_ENV: test
          PORT: 3001

      # Run Playwright tests
      - name: Run Playwright tests
        working-directory: ./frontend
        run: |
          npx playwright install --with-deps
          npx playwright test

      # Run API tests
      - name: Run API tests
        working-directory: ./backend
        run: |
          npm install -g newman
          newman run postman_api_testing/collection/Todo_APIs.json \
            -e postman_api_testing/environment/Todo_Env.json \
            -r cli,html \
            --reporter-html-export api-results.html

      # Upload Playwright report
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: frontend/playwright-report/

      # Upload Newman report
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: postman-results
          path: backend/api-results.html

      # Debug logs
      - name: Debug logs
        if: always()
        run: |
          echo "=== Backend Log ==="
          cat backend/backend.log || true
